"use strict";(window["webpackJsonpPluginseidemann-cms-blocks"]=window["webpackJsonpPluginseidemann-cms-blocks"]||[]).push([[709],{709:function(e,t,n){n.r(t),n.d(t,{default:function(){return i}});let{Criteria:l,EntityCollection:o}=Shopware.Data,{Mixin:a}=Shopware;var i={template:'<div class="yellow-map-element-config">\n    <sw-number-field v-model:value="this.element.config.latitude.value"\n                     numberType="float"\n                     :digits="10"\n                   @update:value="onLatitudeUpdate">\n        <template v-slot:label>Latitude</template>\n    </sw-number-field>\n    <sw-number-field v-model:value="this.element.config.longitude.value"\n                     numberType="float"\n                     :digits="10"\n                   @update:value="onLongitudeUpdate">\n        <template v-slot:label>Longitude</template>\n    </sw-number-field>\n    <sw-number-field v-model:value="this.element.config.zoom.value"\n                     numberType="int"\n                     @update:value="onZoomUpdate"\n    >\n        <template v-slot:label>Zoom</template>\n    </sw-number-field>\n</div>',inject:["repositoryFactory"],mixins:["cms-element"],data(){return{}},computed:{},created(){this.createdComponent()},methods:{createdComponent(){this.initElementConfig("nsc-yellow-map")},onLatitudeUpdate(e){this.element.config.latitude.value=e},onLongitudeUpdate(e){this.element.config.longitude.value=e},onZoomUpdate(e){this.element.config.zoom.value=e}}}}}]);